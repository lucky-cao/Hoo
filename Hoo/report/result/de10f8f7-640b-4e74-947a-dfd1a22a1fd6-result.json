{"name": "test_mine[case2]", "status": "broken", "statusDetails": {"message": "Exception: com.tencent.hobby:id/user_head_icon.元素不存在", "trace": "self = <test_mine.TestMine object at 0x0000014AC10CB7C8>\ncase = {'id': 'mine_003', '优先级': 'P1', '前置条件': '', '是否执行': 'yes', ...}\n\n    @pytest.mark.parametrize(\"case\", run_ed)\n    def test_mine(self, case):\n        # case_id = case[ExcelConfig.case_id]\n        # print(case_id)\n        # case_catalog = case[ExcelConfig.case_catalog]\n        # case_name = case[ExcelConfig.case_name]\n        # case_priority = case[ExcelConfig.case_priority]\n        # case_is_run = case[ExcelConfig.case_is_run]\n        # case_preconditions = case[ExcelConfig.case_preconditions]\n        # case_step = case[ExcelConfig.case_step]\n        case_step_node = case[ExcelConfig.case_step_node]\n        date1 = analysis(case_step_node)\n        # print(date1)\n        # case_expected_outcome = case[ExcelConfig.case_expected_outcome]\n        case_expected_node = case[ExcelConfig.case_expected_node]\n        data2 = expected_analysis(case_expected_node)\n        print(data2)\n        d = ExecuteU2(\"851QFDSG22CDZ\", \"com.tencent.hobby\")\n        for step_node in date1:\n            d.run_app(step_node)\n            time.sleep(0.5)\n            for expected_node in data2:\n                if type(expected_node) == str:\n>                   d.app_assert(expected_node)\n\ntestcase\\test_mine.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.uiauto_util.ExecuteU2 object at 0x0000014AC10CBB08>\nelement = 'com.tencent.hobby:id/user_head_icon'\n\n    def app_assert(self, element):\n        \"\"\"页面断言\"\"\"\n        time.sleep(0.7)\n        if self.dv(text=element).exists(timeout=5):\n            # exists: 等待元素出现\n            print(f\"{element}.success\")\n        elif self.dv(resourceId=element).exists(timeout=5):\n            print(f\"{element}.success\")\n        elif element == \" \":\n            pass\n        else:\n>           raise Exception(f\"{element}.元素不存在\")\nE           Exception: com.tencent.hobby:id/user_head_icon.元素不存在\n\nutils\\uiauto_util.py:59: Exception"}, "parameters": [{"name": "case", "value": "{'id': 'mine_003', '用例目录': '头像', '用例名称': '我的画面点击头像', '优先级': 'P1', '是否执行': 'yes', '前置条件': '', '步骤': '1.嚯app启动》点击底部【我的】tab，我的画面点击头像\\n2.再次点击头像或下拉头像', '步骤节点': '我的, com.tencent.hobby:id/user_head_icon\\n(0.424,0.702)', '预期结果': '1.头像放大表示\\n2.关闭放大头像画面，回到我的画面', '预期节点': 'com.tencent.hobby:id/user_head_icon\\n \\ncom.tencent.hobby:id/user_head_icon'}"}], "start": 1626750887604, "stop": 1626750966282, "uuid": "0f871ca7-7ffc-4b63-bf71-ad0e9e7585b8", "historyId": "22380043696c470ba798bdf9dedef50e", "testCaseId": "da5ae44c99fde797f954ed7865065f3e", "fullName": "testcase.test_mine.TestMine#test_mine", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_mine"}, {"name": "subSuite", "value": "TestMine"}, {"name": "host", "value": "v_linkaica-PC0"}, {"name": "thread", "value": "19728-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_mine"}]}