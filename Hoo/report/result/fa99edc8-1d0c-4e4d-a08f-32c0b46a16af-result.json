{"name": "test_mine[case0]", "status": "broken", "statusDetails": {"message": "Exception: 2202005276啊啊.元素不存在", "trace": "self = <test_mine.TestMine object at 0x000002CA36678B88>\ncase = {'id': 'mine_001', '优先级': 'P1', '前置条件': '', '是否执行': 'yes', ...}\n\n    @pytest.mark.parametrize(\"case\", run_ed)\n    def test_mine(self, case):\n        # case_id = case[ExcelConfig.case_id]\n        # print(case_id)\n        # case_catalog = case[ExcelConfig.case_catalog]\n        # case_name = case[ExcelConfig.case_name]\n        # case_priority = case[ExcelConfig.case_priority]\n        # case_is_run = case[ExcelConfig.case_is_run]\n        # case_preconditions = case[ExcelConfig.case_preconditions]\n        # case_step = case[ExcelConfig.case_step]\n        case_step_node = case[ExcelConfig.case_step_node]\n        date1 = analysis(case_step_node)\n        # print(date1)\n        # case_expected_outcome = case[ExcelConfig.case_expected_outcome]\n        case_expected_node = case[ExcelConfig.case_expected_node]\n        data2 = expected_analysis(case_expected_node)\n        print(data2)\n        d = ExecuteU2(\"851QFDSG22CDZ\", \"com.tencent.hobby\")\n        for step_node in date1:\n            d.run_app(step_node)\n            time.sleep(0.5)\n            for expected_node in data2:\n                if type(expected_node) == str:\n>                   d.app_assert(expected_node)\n\ntestcase\\test_mine.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.uiauto_util.ExecuteU2 object at 0x000002CA36678F88>\nelement = '2202005276啊啊'\n\n    def app_assert(self, element):\n        \"\"\"页面断言\"\"\"\n        if self.dv(text=element).exists(timeout=5):\n            # exists: 等待元素出现\n            print(\"success\")\n        if self.dv(resourceId=element).exists(timeout=5):\n            print(\"success\")\n        else:\n>           raise Exception(f\"{element}.元素不存在\")\nE           Exception: 2202005276啊啊.元素不存在\n\nutils\\uiauto_util.py:56: Exception"}, "parameters": [{"name": "case", "value": "{'id': 'mine_001', '用例目录': '我的', '用例名称': '入口及展示', '优先级': 'P1', '是否执行': 'yes', '前置条件': '', '步骤': '1.登录状态，嚯app启动，点击底部【我的】tab', '步骤节点': '我的', '预期结果': '1.嚯logo表示\\n2.分享按钮显示\\n3.设定按钮显示\\n4.用户头像正确表示\\n5.用户名正确表示\\n6.嚯登录xx天，活跃xx天正确表示\\n7.性别，星座，地址，简介表示(如果没设定不表示)\\n8.编辑资料按钮表示\\n9.影响力，粉丝，关注，收藏，心愿单正确总数表示\\n10.我的个人主页区域，没有内容，默认图表示，如果发布过内容，发布内容的图片表示\\n11.我的购买表示\\n12.我的出售表示\\n13.我的优惠券表示', '预期节点': '2202005276啊啊, 男, 编辑资料, 我的购买'}"}], "start": 1626748450174, "stop": 1626748492411, "uuid": "5c989659-ffa5-4fcf-ba80-8c57b17e70d5", "historyId": "55306d616a7569c343b3708ab930fe49", "testCaseId": "da5ae44c99fde797f954ed7865065f3e", "fullName": "testcase.test_mine.TestMine#test_mine", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_mine"}, {"name": "subSuite", "value": "TestMine"}, {"name": "host", "value": "v_linkaica-PC0"}, {"name": "thread", "value": "18580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_mine"}]}